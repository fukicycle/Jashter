@inject IQuestionService _questionService
<div class="h-100 d-flex flex-column">
    <div>
        <div class="spinner-area">
            <div class="d-flex spinner">
                <div>Level</div>
                <div>
                    <select>
                        <option></option>
                    </select>
                </div>
            </div>
            <div class="d-flex spinner">
                <div>Part of Speech</div>
                <div>
                    <select>
                        <option></option>
                    </select>
                </div>
            </div>
        </div>
        <div class="word-area-wrapper">
            <div class="word-area">
                <div class="word-inner-area">
                    <div>Word</div>
                </div>
            </div>
        </div>
    </div>
    <div class="choice-area">
        @if (_questionList.FirstOrDefault() is not null)
        {
            @foreach (QuestionResponseDto.QuestionChoice item in _questionList.FirstOrDefault().Choices)
            {
                <div>@item.Meaning</div>
            }
        }
    </div>
</div>
@code {
    private IEnumerable<QuestionResponseDto> _questionList = Enumerable.Empty<QuestionResponseDto>();

    protected override async Task OnInitializedAsync()
    {
        QuestionRequestDto questionRequestDto = new QuestionRequestDto();
        questionRequestDto.LevelId = 2;
        questionRequestDto.PartOfSpeechId = 1;
        _questionList = await _questionService.GetQuestionsAsync(questionRequestDto);
        StateHasChanged();
    }
}
