@page "/login"
@inject HttpClient _http
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage

<div class="main-form">
    <div class="form-area">
        <h1>Sign in to Jashter</h1>
        <EditForm Model="@_model" OnValidSubmit="@SubmitLogin">
            <DataAnnotationsValidator />
            <div class="form-input">
                <div class="label">Username:</div>
                <InputText @bind-Value="@_model!.Username" class="form" />
            </div>
            <div class="form-input">
                <div class="label">Password:</div>
                <InputText @bind-Value="@_model!.Password" type="password" class="form" />
            </div>
            @if (_errorMsg is not null)
            {
                <div class="msg-error">
                    <div class="text-danger">@_errorMsg</div>
                </div>
            }
            <button type="submit">Login</button>
            <hr />
            <div class="text-center">or</div>
            <button @onclick="@(() => _navigationManager.NavigateTo("create"))">Create account</button>
        </EditForm>
    </div>
</div>
@code {
    private LoginFormModel? _model;
    private string? _errorMsg;

    protected override void OnInitialized()
    {
        _model = _model ?? new LoginFormModel();
        _errorMsg = null;
    }
    private async Task SubmitLogin()
    {
        _errorMsg = null;
        LoginDto loginDto = new LoginDto
        {
            Username = _model!.Username,
            Password = _model!.Password
        };
        HttpResponseMessage httpResponse = await _http.PostAsJsonAsync("login", loginDto);
        if (httpResponse.IsSuccessStatusCode)
        {
            LoginResponseDto? loginResponse = await httpResponse.Content!.ReadFromJsonAsync<LoginResponseDto>();
            if (loginResponse is null)
            {
                _errorMsg = "Token is missing. Please contact server administrator.";
            }
            else
            {
                await _localStorage.SetItemAsStringAsync("JWT", loginResponse.Token);
                _navigationManager.NavigateTo("");
            }
        }
        else
        {
            _errorMsg = "Authentication failed.";
            StateHasChanged();
        }
    }
}

